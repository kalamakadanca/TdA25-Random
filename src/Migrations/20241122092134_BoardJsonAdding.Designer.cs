// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourDeApp;

#nullable disable

namespace TourDeApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241122092134_BoardJsonAdding")]
    partial class BoardJsonAdding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.CellDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Column")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameBoardDbId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameBoardDbId");

                    b.ToTable("CellDb");
                });

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.GameBoardDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("GameBoardDb");
                });

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.GameDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BoardJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Difficulty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameBoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.CellDb", b =>
                {
                    b.HasOne("TourDeApp.Models.DataBaseModels.GameBoardDb", "GameBoard")
                        .WithMany("Board")
                        .HasForeignKey("GameBoardDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameBoard");
                });

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.GameBoardDb", b =>
                {
                    b.HasOne("TourDeApp.Models.DataBaseModels.GameDb", "Game")
                        .WithOne("GameBoard")
                        .HasForeignKey("TourDeApp.Models.DataBaseModels.GameBoardDb", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.GameBoardDb", b =>
                {
                    b.Navigation("Board");
                });

            modelBuilder.Entity("TourDeApp.Models.DataBaseModels.GameDb", b =>
                {
                    b.Navigation("GameBoard")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
