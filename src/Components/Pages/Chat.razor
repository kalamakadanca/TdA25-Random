@page "/chat"
@inject SignalRService SignalRService
@using TourDeApp.Services
@implements IDisposable
@rendermode InteractiveServer

<h3>Chat</h3>

<div>
    <input @bind="userInput" placeholder="Your name" />
    <input @bind="messageInput" placeholder="Type a message" />
    <button @onclick="Send">Send</button>
</div>

<ul>
    @foreach (var msg in messages)
    {
        <li>@msg.user: @msg.message</li>
    }
</ul>

@code {
    private string userInput = "";
    private string messageInput = "";
    private List<(string user, string message)> messages = new();

    protected override async Task OnInitializedAsync()
    {
        SignalRService.MessageReceived += OnMessageReceived;
        await SignalRService.StartAsync();
    }

    private void OnMessageReceived(object sender, (string user, string message) msg)
    {
        messages.Add(msg);
        InvokeAsync(StateHasChanged);
    }

    private async Task Send()
    {
        if (!string.IsNullOrEmpty(userInput) && !string.IsNullOrEmpty(messageInput))
        {
            await SignalRService.SendMessage(userInput, messageInput);
            messageInput = "";
        }
    }

    public void Dispose()
    {
        SignalRService.MessageReceived -= OnMessageReceived;
        _ = SignalRService.StopAsync();
    }
}