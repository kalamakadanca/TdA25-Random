@page "/game/"
@page "/game/{Uuid}"
@using TourDeApp.Components.Pages.Shared
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject GameService GameService

<PageTitle>Game</PageTitle>

@if (_game != null && _game.GameFinished != true)
{
    <div class="grid-container">
        <div class="left">
            <div class="grid-item">
                1
            </div>
        </div>

        <div class="game">
            <GameField Game="_game" OnWin="StateHasChanged" ReRender="StateHasChanged"></GameField>
        </div>

        <div class="right">
            <div class="grid-item">
                <div class="container_g">
                    <div class=tlac_g id="tlac_2">Hra</div>
                    <div>|</div>
                    <div class=tlac_g id="tlac_1">Editor</div>
                </div>
            </div>
        </div>
    </div>
}
else if (_game == null)
{
    <!-- TODO: Show loading screen or spinning circle (will be nice when games are retrieved from database) -->
}
else
{
    <!-- TODO: Display a message saying who has won, how many rounds, etc. -->
}

@code

{
    private Models.Game? _game { get; set; }
    [Parameter] public string Uuid { get; set; }

    protected override void OnInitialized()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        _game = GameService.CreateGame();
        StateHasChanged(); // Tell blazor that Game should be loaded

        if (Uuid == null)
        {
            Uuid = _game.Uuid;

            await Task.Delay(10);
            NavigationManager.NavigateTo($"/game/{Uuid}", true);
        }
        else
        {
            _game = GameService.GetCurrentGame();
            StateHasChanged();
        }
    }
}
