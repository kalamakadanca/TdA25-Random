@page "/game"
@page "/game/{uuid}"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject GameService GameService
@using TourDeApp.Components.Pages.Shared

<PageTitle>Game</PageTitle>

@if (_game != null && !_game.GameFinished)
{
    <div class="game">
        <GameField Game="_game"></GameField>
    </div>
}
else if (_game.GameFinished == true)
{
    <div>
        @_game.Winner.ToString() has won!
    </div>
}
else
{
    <p>Loading game...</p>
}

@code
{
    [Parameter] public string? Uuid { get; set; }

    private TourDeApp.Models.Game? _game { get; set; }

    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(Uuid))
        {
            _game = GameService.CreateGame();
            if (_game != null)
            {
                NavigationManager.NavigateTo($"/game/{_game.Uuid}", true);
                StateHasChanged();
            }
        }
        else
        {
            _game = GameService.GetCurrentGame();

            if (_game == null || Uuid != _game.Uuid)
            {
                _game = GameService.CreateGame();
                NavigationManager.NavigateTo($"/game/{_game.Uuid}", true);
                StateHasChanged();
            }
        }
    }

    private void Win()
    {
        InvokeAsync(() => StateHasChanged());
    }
}